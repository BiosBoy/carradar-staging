# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Linting CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  linting:
    name: Run linters
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.14.1]

    steps:
    - uses: actions/checkout@v2
    - name: Staring Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Staring Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Restoring Yarn cache
      uses: actions/cache@v2
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

    - name: Bootstraping packages
      if: steps.yarn-cache.outputs.cache-hit != 'true'
      run: yarn install

    - name: Get file changes
      id: get_file_changes
      uses: trilom/file-changes-action@v1.2.4
      with:
        output: ' '

    - name: Echo file changes
      id: hello
      run: |
            echo Added files: ${{ steps.get_file_changes.outputs.files_added }}
            echo Changed files: ${{ steps.get_file_changes.outputs.files_modified }}
            echo Removed files: ${{ steps.get_file_changes.outputs.files_removed }}

    - name: Prettier Checking
      if: ${{ always() && (steps.get_file_changes.outputs.files_added || steps.get_file_changes.outputs.files_modified) }}
      run: yarn prettier --config ./prettier.config.js --ignore-path ./.prettierignore --write ${{ steps.get_file_changes.outputs.files_added }} ${{ steps.get_file_changes.outputs.files_modified }}

    - name: ESLint Checking
      if: ${{ always() && (steps.get_file_changes.outputs.files_added || steps.get_file_changes.outputs.files_modified) }}
      run: yarn eslint --config ./.eslintrc.js --ignore-path ./.eslintignore ${{ steps.get_file_changes.outputs.files_added }} ${{ steps.get_file_changes.outputs.files_modified }} --fix

    - name: StyleLint Checking
      if: ${{ always() && (steps.get_file_changes.outputs.files_added || steps.get_file_changes.outputs.files_modified) }}
      run: yarn stylelint --config ./.stylelintrc  --ignore-path ./.stylelintignore --allow-empty-input ${{ steps.get_file_changes.outputs.files_added }} ${{ steps.get_file_changes.outputs.files_modified }} --fix

    - name: Commit changes
      run: |
          git config user.name biosboy
          git config user.email svyat770@github.com
          git add .
          git diff --quiet && git diff --staged --quiet || git commit -am "Apply formatting changes [skip ci]"
          git push
